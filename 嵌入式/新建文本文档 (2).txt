BootLoader就是在操作系统运行之前运行的一段小程序。通过这段小程序，可以初始化硬件设备，从而将系统的软硬件环境带到一个合适的状态，以便为最终调用操作系统做好准备。对于Bootloader的启动过程又分为两个阶段stage1和stage2。

stage1全部由汇编编写，它的主要工作是（1）初始化硬件设备、（2）为加载Bootlodader的stage2准备RAM空间（3）拷贝Bootloader的stage2到RAM空间（4）设置好堆栈段为stager2的C语言环境做准备。

stage2全部由C语言编写，其的主要工作是（1）初始化本阶段要使用到的硬件设备（2）将内核映像和根文件系统映像从 flash 上读到RAM （3）调用内核

 boot  启动  硬件的初始化

Loader 加载   操作系统加载到内存

kernel 内核
1、管理进程
2、管理内存
3、文件系统
4、设备控制
5、网络管理



1.硬件初始化 2.引导加载Linux系统3.给Linux内核传参4.执行用户命令

SDRAM  分为 内核区和用户区

编写工具u-boot  Eboot


内核 一个大的裸机程序  

挂载 是指将一个设备（通常是存储设备）挂接到一个已存在的目录上。




启动过程：uboot->硬件初始化->加载内核->向内核传递参数->启动内核

内核启动->uboot生命结束->七大功能初始化->根据参数寻找rootfs




看到命令行  说明移植成功

ko驱动封装形成的模块文件
Linux下加载驱动模块都是.o文件， .o文件也就是object文件。
.ko文件是kernel object文件，也就问kernel下的模块加载文件。
加载模块 insmod +
卸载模块 rmmod +


Linux设备分类

字符设备

块设备

网络设备

字符设备驱动程序

设备结构体  继承关系      操作函数    